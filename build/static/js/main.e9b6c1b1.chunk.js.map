{"version":3,"sources":["survey.svg","logo.png","_helpers/helpers.js","_helpers/dbhelpers.js","_contractHandlers/SurveryHandler.js","ETH-512.svg","components/NewSurvey.js","components/OwnerSurveys.js","_layout/Participate.js","_layout/Styles.js","components/Participate.js","_layout/Claim.js","components/Claim.js","_layout/TestNet.js","_layout/Home.js","components/Home.js","components/TestNetCheck.js","_layout/listItems.js","_layout/Dashboard.js","Routing.js","index.js"],"names":["module","exports","__webpack_require__","p","helpers","initDrizzle","drizzle","Promise","resolve","reject","unsubscribe","store","subscribe","drizzleState","getState","drizzleStatus","initialized","loading","getDeployedNetworks","deployedNetworks","Object","keys","jsonData","forEach","id","Number","push","getJSONFromFile","_getJSONFromFile","asyncToGenerator","regenerator_default","a","mark","_callee2","files","wrap","_context2","prev","next","length","abrupt","_ref","_callee","fr","_context","FileReader","onload","e","data","JSON","parse","target","result","readAsText","stop","_x2","_x3","apply","this","arguments","_x","axios","require","dbHelpers","insertURL","listURL","configURL","Add","_Add","item","col","post","then","res","catch","err","console","error","Find","_Find","_Id","extra","params","participant","surveyId","code","surveyCode","get","_x4","_x5","config","getKey","SurveyHandler","AddSurvey","_AddSurvey","values","Survey","title","description","address","option1","option2","option3","prizeEth","contracts","survey","creationDate","Date","toLocaleString","signTransaction","sign","serverSign","response","ok","methods","addSurvey","insertedId","stringify","send","from","value","EthToWei","on","receipt","getBalance","call","sent","type","key","serverKey","web3","eth","personal","surveyString","accounts","toString","msg","concat","selectedOption","utils","toWei","WeiToEth","wei","fromWei","GetSurveyList","_GetSurveyList","getSurveyByAddress","Id","part","GetSurveyResult","_GetSurveyResult","_callee3","_context3","getSurveyResultsByCode","_x6","CheckSurveyExsist","_CheckSurveyExsist","_callee5","_context5","_callee4","_context4","t0","surveyExsist","t1","_x9","_x10","_x7","_x8","CastVote","_CastVote","_callee6","Sid","option","_context6","ops","_x11","_x12","_x13","_x14","GetWinnerAddress","_GetWinnerAddress","_callee7","rand","_context7","Math","random","participants","winner","endSurvey","_x15","_x16","ClaimPrize","_ClaimPrize","_callee8","signature","r","s","v","v_decimal","_context8","signiture","substr","slice","toDecimal","sha3","verifyPrize","sendPrize","_x17","_x18","_x19","_x20","GetSurveyByCode","_GetSurveyByCode","_callee9","_context9","_x21","_x22","GetParticipantByAddress","_GetParticipantByAddress","_callee10","_context10","_x23","_x24","CancelSurvey","_CancelSurvey","_callee11","owner","_context11","cancelSurvey","_x25","_x26","_extends","assign","i","source","prototype","hasOwnProperty","ETH_512_ref","react_default","createElement","_ref2","transform","fill","stroke","d","ETH_512_SvgEth512","props","width","height","viewBox","preserveAspectRatio","NewSurvey","state","surveyDate","hasSurvey","surveyAdded","progressVisible","timeToRedirect","formErrors","handleClick","event","_this","checkForm","setState","handler","status","gasUsed","TransHash","transactionHash","log","handleClickDown","sendFile","_this2","SurveryHandler","GenerateRandomCode","TextNumCode","forceUpdate","errors","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","document","setAttribute","body","appendChild","click","remove","classes","_this3","index_es","date","now","renderer","hours","minutes","seconds","completed","Redirect","to","Card_default","className","card","CardHeader_default","avatar","style","dist_default","percentage","text","styles","path","fontSize","action","Fab_default","variant","aria-label","fab","onClick","ArrowDownward_default","extendedIcon","subheader","CardContent_default","Typography_default","component","CardActions_default","actions","disableActionSpacing","color","_this4","LinearProgress_default","navigateHome","margin","Grid_default","container","direction","alignItems","spacing","Code_default","TextField_default","label","textField","fullWidth","InputProps","readOnly","Filter1_default","helperText","required","onChange","Filter2_default","multiline","Filter3_default","logo","startAdornment","InputAdornment_default","position","hidden","List_default","dense","map","txt","ListItem_default","ListItemText_default","listItemError","primary","disableTypography","marginTop","padding","Navigation_default","React","Component","withStyles","theme","display","OwnerSurveys","rows","open","hasData","connecting","surveryCanceled","winnnerFetched","handleClickOpen","handleClose","numOfUsers","o1","o2","o3","element","WinnerCard","OwnerSurveysTable","results","cardError","Divider_default","_this$getParticipants","getParticipantsCount","background","backgroundPadding","_this5","canceled","_this6","Timestamp","surveyLink","cardGrid","xs","md","cardDetails","Button_default","disabled","submit","handleDone","handleCancel","CardMedia_default","cardMedia","image","surveyIcon","Paper_default","secondary","RenderResult","root","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","BottomNavigationAction_default","icon","Share_default","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","core_index_es","href","lib","onCopy","copied","FileCopy_default","DialogActions_default","CardActionArea_default","gutterBottom","size","unit","overflowX","minWidth","flex","details","flexDirection","content","cover","float","trail","ParticipateLayout","selected","voted","voting","requestCall","participation","handleChange","control","_this$props","_this2$state","entries","footer","BookmarkBorder_default","_this$state","main","CssBaseline_default","paper","Avatar_default","handleSendCode","window","location","reload","_this$props2","headerIcon","SupervisorAccount_default","button","active","Filter1Outlined_default","Filter2Outlined_default","Filter3Outlined_default","handleVote","Done_default","headerRender","renderCodeRequest","maxWidth","backgroundColor","palette","defineProperty","marginLeft","marginRight","breakpoints","up","form","border","ParticipateScreen","lastIndexOf","Participate","ClaimLayout","fileUploaded","handleClaim","done","ArrowUpward_default","dist_index_es","bind","filesLimit","dropzoneText","showFileNamesInPreview","dropzoneClass","dropzone","ClaimScreen","process","Claim","appBar","heroUnit","heroContent","heroButtons","layout","paddingTop","cardContent","flexGrow","cards","networks","Fragment","paragraph","classNames","sm","lg","subtitle","justify","prefix","HomeScreen","Home","TestNetCheck","currentNetwork","checkWeb3","dNet","some","net","getNetworkType","networkName","toLowerCase","components_Home","TestNet","mainListItems","ListSubheader_default","inset","ListItemIcon_default","PlusOne_default","DoneAll_default","People_default","AttachMoney_default","headerStyle","backgroundImage","drawerStyle","Dashboard","handleDrawerOpen","handleDrawerClose","AppBar_default","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","menuButton","menuButtonHidden","Menu_default","Link","noWrap","Drawer_default","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","appBarSpacer","children","paddingRight","objectSpread","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","whiteSpace","overflow","chartContainer","tableContainer","h5","marginBottom","baseName","Wrapper","createReactClass","displayName","render","_layout_Dashboard","options","fallback","url","drizzleStore","generateStore","Drizzle","ReactDOM","HashRouter","basename","Switch","Route","exact","components_TestNetCheck","components_NewSurvey","components_OwnerSurveys","components_Participate","components_Claim","getElementById"],"mappings":"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","file":"static/js/main.e9b6c1b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/survey.1341f506.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2f6eb2eb.png\";","import * as jsonData from '../contracts/Survey.json';\nconst helpers = {\n    initDrizzle: function (drizzle) {\n        return new Promise(function (resolve, reject) {\n            const unsubscribe = drizzle.store.subscribe(() => {\n                const drizzleState = drizzle.store.getState();\n                if (drizzleState.drizzleStatus.initialized) {\n                    resolve({ loading: false, drizzleState, unsubscribe });\n                }\n            })\n        });\n    },\n    getDeployedNetworks: function () {\n        return new Promise(function (resolve, reject) {\n            var deployedNetworks = [];\n            Object.keys(jsonData.networks).forEach(id => {\n                if (Number(id) === 1) { deployedNetworks.push('main'); }\n                else if (Number(id) === 42) { deployedNetworks.push('kovan'); }\n                else if (Number(id) === 3) { deployedNetworks.push('ropsten'); }\n                else if (Number(id) === 4) { deployedNetworks.push('rinkeby'); }\n                else { deployedNetworks.push('ganache'); }\n            });\n            resolve(deployedNetworks);\n        })\n    },\n    getJSONFromFile: async function (files) {\n        if (files.length <= 0) {\n            return false;\n        }\n        return new Promise(async function (resolve, reject) {\n            var fr = new FileReader();\n            fr.onload = function (e) {\n                var data = JSON.parse(e.target.result);\n                resolve(data);\n            }\n            await fr.readAsText(files[0]);\n        });\n\n    },\n};\n\nexport default helpers;","const axios = require('axios');\n\nconst dbHelpers = {\n    insertURL:\n        [\n            '/addSurvey',\n            '/addParticipant'\n        ],\n    listURL:\n        [\n            '/getSurvey',\n            '/getParticipant'\n        ],\n    configURL:\n        [\n            '/getKey'\n        ],\n    Add: async function (item, col) {\n        return new Promise(function (resolve, reject) {\n            axios\n                .post(dbHelpers.insertURL[col], item)\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch(err => {\n                    console.error(err);\n                });\n        })\n    },\n    Find: async function (_Id, col, extra) {\n        return new Promise(function (resolve, reject) {\n            let params = {};\n            if (_Id)\n                params['Id'] = _Id;\n            else {\n                if (extra.participant)\n                    params = {\n                        \"surveyId\": extra.surveyId\n                    };\n                if (extra.code)\n                    params = {\n                        \"surveyCode\": extra.surveyCode\n                    };\n            }\n            axios.get(dbHelpers.listURL[col], { params }).then(function (data) {\n                resolve(data);\n            }).catch(function (err) {\n                console.error(err);\n            })\n        })\n    },\n    config: {\n        getKey: function () {\n            return new Promise(function (resolve, reject) {\n                axios.get(dbHelpers.configURL[0]).then(function (data) {\n                    resolve(data);\n                }).catch(function (err) {\n                    console.error(err);\n                })\n            });\n        }\n    }\n};\nexport default dbHelpers;","import dbHelpers from '../_helpers/dbhelpers'\n\n\nconst SurveyHandler = {\n    AddSurvey: async function (drizzle, values) {\n        const { Survey } = drizzle.contracts;\n        const { title, description, address, option1, option2, option3, surveyCode, prizeEth } = values;\n        return await new Promise(function (resolve, reject) {\n            let survey = {\n                title: title,\n                description: description,\n                address: address,\n                option1: option1,\n                option2: option2,\n                option3: option3,\n                surveyCode: surveyCode,\n                prizeEth: prizeEth,\n                creationDate: new Date().toLocaleString()\n            }\n            SurveyHandler.signTransaction(drizzle, survey, 1).then(function (res) {\n                survey['signiture'] = res.sign;\n                survey['serverSigniture'] = res.serverSign;\n\n                dbHelpers.Add(survey, 0).then(function (response) {\n                    let data = response.data;\n                    if (data.ok) {\n                        //bytes12 _id,address _owner,string memory _data\n                        Survey.methods.addSurvey(data.insertedId, survey.address, JSON.stringify(survey))\n                            .send({ from: survey.address, value: SurveyHandler.EthToWei(drizzle, survey.prizeEth) })\n                            .on('receipt', receipt => {\n                                Survey.methods.getBalance().call().then((data) => {\n                                    resolve({ receipt, survey });\n                                })\n                            });\n                    }\n                });\n            })\n        });\n    },\n    signTransaction: function (drizzle, data, type) {\n        return new Promise(function (resolve, reject) {\n            dbHelpers.config.getKey().then((key) => {\n                let serverKey = key.data;\n                let web3 = drizzle.web3.eth;\n                web3.personal.sign(SurveyHandler.surveyString(data, type), data.address, function (error, result) {\n                    if (!error) {\n                        let serverSign = web3.accounts.sign(result.toString(), serverKey);\n                        let sign = result;\n                        resolve({ serverSign, sign })\n                    }\n                    else\n                        reject(error);\n                });\n            });\n        })\n    },\n    surveyString: function (data, type) {\n        let msg = '';\n        if (type === 1)\n            msg = `\n            Title: ${data.title}\\n\n            Description:${ data.description}\\n\n            Address: ${data.address}\\n\n            Option 1:${ data.option1}\\n\n            Option 2: ${data.option2}\\n\n            Option 3: ${data.option3}\\n\n            Survey Code: ${data.surveyCode}\\n\n            Prize in Eth: ${data.prizeEth}\\n\n            Creation Date: ${new Date().toLocaleString()}`;\n        if (type === 2)\n            msg = `\n            Address: ${data.address}\\n\n            Selected Option:${ data.selectedOption}\\n`;\n        return msg;\n    },\n    EthToWei: function (drizzle, eth) {\n        return drizzle.web3.utils.toWei(eth, 'ether')\n    },\n    WeiToEth: function (drizzle, wei) {\n        return drizzle.web3.utils.fromWei(wei, 'ether')\n    },\n    GetSurveyList: async function (drizzle, address) {\n        const { Survey } = drizzle.contracts;\n        return await new Promise(function (resolve, reject) {\n            Survey.methods.getSurveyByAddress(address).call().then(function (Id) {\n                if (Id != \"done\") {\n                    dbHelpers.Find(Id, 0).then(function (res) {\n                        if (!res.data) { reject('no data') }\n                        let survey = res.data;\n                        dbHelpers.Find(null, 1,\n                            {\n                                participant: true,\n                                surveyId: survey[\"_id\"]\n                            }).then(function (part) {\n                                survey[\"participants\"] = part.data;\n                                resolve(survey);\n                            });\n\n                    });\n                }\n            });\n        });\n    },\n\n    //deparced\n    GetSurveyResult: async function (drizzle, code) {\n        const { Survey } = drizzle.contracts;\n        return await new Promise(function (resolve, reject) {\n            Survey.methods.getSurveyResultsByCode(code).call().then(function (res) {\n                resolve(res);\n            });\n        });\n    },\n    CheckSurveyExsist: async function (drizzle, address) {\n        const { Survey } = drizzle.contracts;\n        return await new Promise(async function (resolve, reject) {\n            resolve(await Survey.methods.surveyExsist(address).call());\n        });\n    },\n    CastVote: async function (drizzle, address, Sid, option) {\n        //const { Survey } = drizzle.contracts;\n        let participant = {\n            address: address,\n            surveyId: Sid,\n            selectedOption: option\n        };\n        return await new Promise(function (resolve, reject) {\n            SurveyHandler.signTransaction(drizzle, participant, 2).then(function (res) {\n                participant['signiture'] = res.sign;\n                participant['serverSigniture'] = res.serverSign;\n                dbHelpers.Add(participant, 1).then(function (res) {\n                    if (!res.data) { reject('no data') }\n                    let part = res.data.ops[0];\n                    delete part[\"_id\"];\n                    delete part[\"surveyId\"];\n                    resolve(part)\n                    //string memory _id,string memory _sid,address _owner\n                    /* Survey.methods.addParticipation(res.data.insertedId, Sid, address).send()\n                        .on('receipt', receipt => resolve(receipt)); */\n                })\n            })\n        });\n    },\n    GetWinnerAddress: async function (drizzle, survey) {\n        const { Survey } = drizzle.contracts;\n        let rand = Math.random() * (survey.participants.length - 1) + 1;\n        return await new Promise(function (resolve, reject) {\n            let winner = survey.participants[rand - 1].address;\n            Survey.methods.endSurvey(survey[\"_id\"], winner, survey.prizeEth).send()\n                .on('receipt', receipt => resolve(winner));\n        });\n    },\n    ClaimPrize: async function (drizzle, address, sign, survey) {\n        //function claimPrize(address _winner,bytes32 msgHash, uint8 v, bytes32 r, bytes32 s)\n        const { Survey } = drizzle.contracts;\n        let signature = sign.signiture;\n        let web3 = drizzle.web3;\n        signature = signature.substr(2);\n        let r = '0x' + signature.slice(0, 64);\n        let s = '0x' + signature.slice(64, 128);\n        let v = '0x' + signature.slice(128, 130);\n        let v_decimal = web3.utils.toDecimal(v);\n        let msg = web3.utils.sha3(SurveyHandler.surveyString(sign, 1));\n        return await new Promise(function (resolve, reject) {\n            Survey.methods.verifyPrize(address, msg, v_decimal, r, s).call().then((winner) => {\n                if (address == winner) {\n                    Survey.methods.sendPrize(SurveyHandler.EthToWei(drizzle, survey.prizeEth))\n                        .send({ from: address }).on('receipt', receipt => resolve(receipt));\n                }\n            })\n        });\n    },\n    GetSurveyByCode: async function (drizzle, code) {\n        return await new Promise(function (resolve, reject) {\n            dbHelpers.Find(null, 0,\n                {\n                    code: true,\n                    surveyCode: code\n                }).then(function (res) {\n                    if (!res.data) { reject('no ') }\n                    resolve(res.data);\n                })\n        });\n    },\n    GetParticipantByAddress: async function (address, survey) {\n        return new Promise(function (resolve, reject) {\n            dbHelpers.Find(null, 1,\n                {\n                    participant: true,\n                    surveyId: survey[\"_id\"]\n                }).then(function (part) {\n                    part.data.forEach((item) => {\n                        if (item.address === address) {\n                            resolve(item);\n                        }\n                    })\n                    resolve({});\n                });\n        })\n    },\n    CancelSurvey: async function (drizzle, owner) {\n        const { Survey } = drizzle.contracts;\n        return await new Promise(function (resolve, reject) {\n            Survey.methods.cancelSurvey(owner).send()\n                .on('receipt', receipt => resolve(receipt));\n        });\n    }\n};\n\nexport default SurveyHandler;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"metadata\", null, \"\\nCreated by potrace 1.15, written by Peter Selinger 2001-2017\\n\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(0.000000,512.000000) scale(0.100000,-0.100000)\",\n  fill: \"#000000\",\n  stroke: \"none\"\n}, React.createElement(\"path\", {\n  d: \"M1787 3868 c-410 -689 -742 -1254 -737 -1256 6 -2 1257 541 1474 639 l26 12 0 929 c0 510 -4 928 -9 928 -4 0 -344 -564 -754 -1252z\"\n}), React.createElement(\"path\", {\n  d: \"M2642 4190 l3 -934 750 -328 c412 -180 753 -327 757 -326 8 3 -1480 2489 -1503 2513 -6 5 -8 -349 -7 -925z\"\n}), React.createElement(\"path\", {\n  d: \"M1758 2822 c-422 -186 -768 -339 -768 -342 1 -5 1530 -902 1550 -908 7 -3 10 253 10 792 0 631 -3 796 -12 795 -7 0 -358 -152 -780 -337z\"\n}), React.createElement(\"path\", {\n  d: \"M2640 2366 l0 -797 24 13 c88 48 1526 894 1526 898 0 4 -1497 663 -1540 678 -6 2 -10 -291 -10 -792z\"\n}), React.createElement(\"path\", {\n  d: \"M1007 2146 c47 -79 1520 -2146 1530 -2146 11 0 13 107 11 631 l-3 631 -765 449 c-421 246 -769 448 -773 449 -4 0 -4 -6 0 -14z\"\n}), React.createElement(\"path\", {\n  d: \"M3403 1712 l-763 -447 0 -632 c0 -374 4 -633 9 -633 7 0 1494 2094 1525 2148 4 6 4 12 -1 11 -4 0 -351 -201 -770 -447z\"\n}));\n\nvar SvgEth512 = function SvgEth512(props) {\n  return React.createElement(\"svg\", _extends({\n    width: \"512.000000pt\",\n    height: \"512.000000pt\",\n    viewBox: \"0 0 512.000000 512.000000\",\n    preserveAspectRatio: \"xMidYMid meet\"\n  }, props), _ref, _ref2);\n};\n\nexport default __webpack_public_path__ + \"static/media/ETH-512.6ebf6cf6.svg\";\nexport { SvgEth512 as ReactComponent };","import React from 'react';\nimport { Redirect } from 'react-router'\nimport Countdown from 'react-countdown-now';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Code from '@material-ui/icons/Code';\nimport Filter1 from '@material-ui/icons/Filter1';\nimport Filter2 from '@material-ui/icons/Filter2';\nimport Filter3 from '@material-ui/icons/Filter3';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport helpers from '../_helpers/helpers'\nimport handler from '../_contractHandlers/SurveryHandler';\nimport SurveryHandler from '../_contractHandlers/SurveryHandler';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport CardActions from '@material-ui/core/CardActions';\nimport GenerateRandomCode from 'react-random-code-generator';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { ReactComponent as Logo } from '../ETH-512.svg';\n\nimport ListItemText from '@material-ui/core/ListItemText';\nconst styles = theme => ({\n  listItemError: {\n    display: 'inline',\n    color: 'red'\n  },\n  logo: {\n    width: '45px',\n    height: '50px'\n  }\n});\nclass NewSurvey extends React.Component {\n\n  state = {\n    loading: true, drizzleState: null,\n    survey: null,\n    title: '',\n    address: '',\n    description: '',\n    option1: '',\n    option2: '',\n    option3: '',\n    prizeEth: 0,\n    surveyDate: '',\n    surveyCode: '',\n    hasSurvey: false,\n    surveyAdded: false,\n    progressVisible: false,\n    receipt: '',\n    timeToRedirect: 115000,\n    unsubscribe: '',\n    formErrors: []\n  };\n\n  componentDidMount() {\n    const { drizzle } = this.props;\n\n    helpers.initDrizzle(drizzle).then((state) => {\n      SurveryHandler.CheckSurveyExsist(this.props.drizzle,\n        state.drizzleState.accounts[0])\n        .then((hasSurvey) => {\n          if (hasSurvey)\n            this.setState({ loading: false, hasSurvey: false });\n          else {\n            state.address = state.drizzleState.accounts[0];\n            state.surveyCode = GenerateRandomCode.TextNumCode(5, 3);\n            this.setState(state);\n          }\n        }).then(() => {\n          this.forceUpdate();\n        })\n    });\n  }\n  componentWillUnmount() {\n  }\n  checkForm() {\n    const errors = [];\n    if (!(this.state.title && this.state.title.length > 0)) {\n      errors.push(\"Title Can't be Empty\");\n    }\n    if (!(this.state.description && this.state.description.length > 0)) {\n      errors.push(\"Description Can't be Empty\");\n    }\n    if (!(this.state.option1 && this.state.option1.length > 0)) {\n      errors.push(\"First Option Can't be Empty\");\n    }\n    if (!(this.state.option2 && this.state.option2.length > 0)) {\n      errors.push(\"Second Option Can't be Empty\");\n    }\n    if (!(this.state.option3 && this.state.option3.length > 0)) {\n      errors.push(\"Third Option Can't be Empty\");\n    }\n    if (!(this.state.prizeEth && this.state.prizeEth > 0)) {\n      errors.push(\"Prize Value Can't be Empty\");\n    }\n    if (errors.length > 0) {\n      this.setState({ formErrors: errors });\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  handleClick = event => {\n    if (this.checkForm()) {\n      this.setState({ progressVisible: false, formErrors: [] });\n      handler.AddSurvey(this.props.drizzle, this.state).then((data) => {\n        const { receipt, survey } = data;\n        this.setState({\n          surveyAdded: receipt.status,\n          receipt:\n          {\n            gasUsed: receipt.gasUsed,\n            TransHash: receipt.transactionHash\n          },\n          progressVisible: false,\n          survey: survey\n        });\n        console.log('cool');\n\n        // this.sendFile(this.state.survey, \"signature\");\n      });\n    }\n\n  };\n  sendFile(exportObj, exportName) {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\n    var downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n  handleClickDown = event => {\n    this.sendFile(this.state.survey, \"Signature\");\n  }\n  navigateHome(classes) {\n    const renderer = ({ hours, minutes, seconds, completed }) => {\n      if (completed) {\n        return <Redirect to=\"/\" />\n      } else {\n        return (\n          <Card className={classes.card}>\n            <CardHeader\n              avatar={\n                <div style={{ width: '50px' }}>\n                  <CircularProgressbar\n                    percentage={seconds * 20}\n                    text={`${seconds}s`}\n                    styles={{\n                      path: { stroke: `rgb(63, 81, 181, ${seconds * 20 / 100})` },\n                      text: { fill: '#f88', fontSize: '30px' },\n                    }}\n                  />\n                </div>\n              }\n              action={\n                <Fab variant=\"extended\" aria-label=\"Delete\" className={classes.fab}\n                  onClick={this.handleClickDown}\n                >\n                  <ArrowDownward className={classes.extendedIcon} />\n                  Download\n              </Fab>\n              }\n              title=\"Survey Created!\"\n              subheader={new Date(Date.now()).toLocaleString()}\n            />\n            <CardContent>\n              <Typography component=\"p\">\n                <b>Gas Used: </b> {this.state.receipt.gasUsed}\n              </Typography>\n              <Typography component=\"p\">\n                <b>Transaction Hash: </b> {this.state.receipt.TransHash}\n              </Typography>\n              <CardActions className={classes.actions} disableActionSpacing>\n                <Typography component=\"i\" color=\"textSecondary\" >\n                  Please Download your signature for safe keeping\n                </Typography>\n              </CardActions>\n            </CardContent>\n          </Card >\n        )\n      }\n    };\n    return (\n      <Countdown date={Date.now() + this.state.timeToRedirect} renderer={renderer} />\n    );\n  }\n  render() {\n    const { classes } = this.props;\n    if (this.state.loading) return (\n      <div>\n        <Typography component=\"h1\" variant=\"h5\">\n          Please Wait ....\n        <Typography color=\"textSecondary\"> {'\\t'} Connecting to network</Typography>\n        </Typography>\n        <br></br>\n        <LinearProgress color=\"secondary\"></LinearProgress>\n      </div>);\n    else if (this.state.hasSurvey)\n      return (<Typography component=\"h1\" variant=\"h5\">\n        Survey Already Added !\n    <Typography color=\"textSecondary\"> {'\\t'}Please finish the current one before adding a new one</Typography>\n      </Typography>);\n    else if (this.state.surveyAdded)\n      return (this.navigateHome(classes));\n    return (\n      <div className={classes.margin}>\n        <Grid container\n          direction='column'\n          alignItems='stretch'\n          spacing={8}>\n          <Grid item>\n            <Code />\n            <TextField\n              id=\"user-address\"\n              label=\"Address\"\n              className={classes.textField}\n              fullWidth\n              value={this.state.address}\n              margin=\"normal\"\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <Filter1 />\n            <TextField\n              id=\"survey-title\"\n              label=\"Survey Title\"\n              className={classes.textField}\n              helperText=\"Enter a Title for the survey!\"\n              margin=\"normal\"\n              fullWidth\n              required\n              onChange={(e) => { this.setState({ title: e.target.value }) }}\n            />\n          </Grid>\n          <Grid item>\n            <Filter2 />\n            <TextField\n              id=\"survey-desc\"\n              label=\"Survey Description\"\n              className={classes.textField}\n              fullWidth\n              multiline\n              helperText=\"Enter a Description for the survey!\"\n              margin=\"normal\"\n              onChange={(e) => { this.setState({ description: e.target.value }) }}\n            />\n          </Grid>\n          <Filter3 />\n          <Grid item>\n            <TextField\n              id=\"survey-opt1\"\n              label=\"First Answer Option\"\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={(e) => { this.setState({ option1: e.target.value }) }}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"survey-opt2\"\n              label=\"Second Answer Option\"\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={(e) => { this.setState({ option2: e.target.value }) }}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"survey-opt3\"\n              label=\"Third Answer Option\"\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={(e) => { this.setState({ option3: e.target.value }) }}\n            />\n          </Grid>\n          <Grid item>\n            <Logo className={classes.logo} />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              fullWidth\n              helperText=\"Enter the Winning Bet for the survey!\"\n              type=\"number\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n              }}\n              onChange={(e) => { this.setState({ prizeEth: e.target.value }) }}\n              id=\"input-with-icon-grid\" label=\"Prize in ETH\" />\n          </Grid>\n          <Grid item>\n            <LinearProgress color=\"secondary\" hidden={!this.state.progressVisible} />\n            <div hidden={Number(this.state.formErrors.length) === 0}>\n              <List dense={true} >\n                {\n                  this.state.formErrors.map((txt, i) => {\n                    return (\n                      <ListItem key={i}>\n                        <ListItemText className={classes.listItemError}\n                          primary={txt}\n                          disableTypography={true}\n                        />\n                      </ListItem>)\n                  })\n                }\n\n              </List>\n            </div>\n            <Fab variant=\"extended\" onClick={this.handleClick}\n              style={{ marginTop: 30, padding: 10 }}\n              aria-label=\"Delete\" className={classes.fab}>\n              <NavigationIcon className={classes.extendedIcon} />\n              Add Survey\n             </Fab>\n          </Grid>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nNewSurvey.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(NewSurvey);;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SurveryHandler from '../_contractHandlers/SurveryHandler';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport helpers from '../_helpers/helpers';\nimport surveyIcon from '../survey.svg';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Fab from '@material-ui/core/Fab';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Link } from '@material-ui/core';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Redirect } from 'react-router'\nimport Countdown from 'react-countdown-now';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\n\nconst styles = theme => ({\n    root: {\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n        alignItems: 'center',\n    },\n    table: {\n        minWidth: 700,\n    },\n    card: {\n        display: 'flex',\n    },\n    cardError: {\n        display: 'flex',\n        color: 'red'\n    },\n    cardDetails: {\n        flex: 1,\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 151,\n        float: 'right'\n    },\n    cardMedia: {\n        width: 197\n    },\n    result: {\n        width: 60,\n        background: {\n            fill: '#3f51b5',\n        },\n        text: {\n            fill: '#fff',\n        },\n        path: {\n            stroke: '#fff',\n        },\n        trail: { stroke: 'transparent' },\n    }\n});\n\n\nlet id = 0;\nclass OwnerSurveys extends React.Component {\n    state = {\n        rows: null,\n        open: false,\n        loading: true,\n        hasSurvey: false,\n        hasData: false,\n        timeToRedirect: 5000,\n        connecting: false,\n        surveryCanceled: false,\n        winner: '',\n        winnnerFetched: false\n    }\n    componentDidMount() {\n        helpers.initDrizzle(this.props.drizzle).then((state) => {\n            SurveryHandler.CheckSurveyExsist(this.props.drizzle,\n                state.drizzleState.accounts[0])\n                .then((hasSurvey) => {\n                    if (hasSurvey) {\n                        this.setState({ hasSurvey: true });\n                        SurveryHandler.GetSurveyList(this.props.drizzle,\n                            state.drizzleState.accounts[0])\n                            .then((data) => {\n                                console.log(data);\n\n                                this.setState({ rows: data, hasData: true, loading: false });\n                            }).then(() => {\n                                this.forceUpdate();\n                            });\n                    }\n                    else {\n                        this.setState({ loading: false });\n                        this.forceUpdate();\n                    }\n                })\n        });\n    }\n    /* let survey = {\n        title: title,\n        description: description,\n        address: address,\n        option1: option1,\n        option2: option2,\n        option3: option3,\n        surveyCode: surveyCode,\n        prizeEth: prizeEth\n    } */\n    createData(creationDate, numOfUsers) {\n        id += 1;\n        return { id, creationDate, numOfUsers };\n    }\n    getParticipantsCount(rows) {\n        let o1 = 0, o2 = 0, o3 = 0;\n        rows.forEach(element => {\n            switch (element.selectedOption) {\n                case 1:\n                    o1++;\n                    break;\n                case 2:\n                    o2++;\n                    break;\n                case 3:\n                    o3++;\n                    break;\n                default:\n                    break;\n            }\n        });\n        return { o1, o2, o3 };\n    }\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n    render() {\n        const { classes } = this.props;\n        if (this.state.loading) {\n            return (<div>\n                <Typography component=\"h1\" variant=\"h5\">\n\n                    Please Wait ....\n                  <Typography color=\"textSecondary\"> {'\\t'} Connecting to network</Typography>\n                </Typography>\n                <br></br>\n                <LinearProgress color=\"secondary\"></LinearProgress>\n            </div>);\n        }\n        else if (this.state.hasSurvey) {\n            if (this.state.winnnerFetched) {\n                return this.WinnerCard(classes);\n            }\n            else if (this.state.surveryCanceled)\n                return (\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Survey canceled\n             <Typography color=\"textSecondary\">\n                            {'\\t'} You Can create a new one now !</Typography>\n                    </Typography>\n                );\n            else if (this.state.hasData) {\n                return (this.OwnerSurveysTable(classes, this.state.results));\n            }\n        }\n        else {\n            return (\n                <Typography component=\"h1\" variant=\"h5\">\n                    No Survey Created!\n                      <Typography color=\"textSecondary\"> {'\\t'} please create one using the menu</Typography>\n                </Typography>);\n        }\n    }\n    navigateHome(classes) {\n        const renderer = ({ hours, minutes, seconds, completed }) => {\n            if (completed) {\n                this.forceUpdate();\n                return <Redirect to=\"/mysurveys\" />\n            } else {\n                return (\n                    <Card className={classes.cardError}>\n                        <CardHeader\n                            avatar={\n                                <div style={{ width: '50px' }}>\n                                    <CircularProgressbar\n                                        percentage={seconds * 20}\n                                        text={`${seconds}s`}\n                                        styles={{\n                                            path: { stroke: `rgb(63, 81, 181, ${seconds * 20 / 100})` },\n                                            text: { fill: '#f88', fontSize: '30px' },\n                                        }}\n                                    />\n                                </div>\n                            }\n                            title=\"No Survey Found Please Create One\"></CardHeader>\n                        <CardActions className={classes.actions} disableActionSpacing>\n                            <Divider ></Divider>\n                            <br></br>\n                            <Typography component=\"p\" color=\"textSecondary\" >\n                                Redirecting to Home Page click to procced\n                               </Typography>\n                        </CardActions>\n                    </Card>\n                )\n            }\n        };\n        return (\n            <Countdown date={Date.now() + this.state.timeToRedirect} renderer={renderer} />\n        );\n    }\n    RenderResult(value, option, classes) {\n        const { o1, o2, o3 } = this.getParticipantsCount(value);\n        switch (option) {\n            case 1:\n                return (<CircularProgressbar\n                    percentage={o1}\n                    text={`${o1}`}\n                    background\n                    backgroundPadding={6}\n                    className={classes.result}\n                />);\n\n            case 2:\n                return (<CircularProgressbar\n                    percentage={o2}\n                    text={`${o2}`}\n                    background\n                    backgroundPadding={6}\n                    className={classes.result}\n                />);\n\n            case 3:\n                return (<CircularProgressbar\n                    percentage={o3}\n                    text={`${o3}`}\n                    background\n                    backgroundPadding={6}\n                    className={classes.result}\n                />);\n\n            default:\n                break;\n        }\n\n    }\n    handleDone(rows) {\n        if (rows.participants.length > 0) {\n            SurveryHandler.GetWinnerAddress(this.props.drizzle,\n                rows)\n                .then((address) => {\n                    this.setState({ winner: address, winnnerFetched: true });\n                    this.forceUpdate();\n                });\n        }\n    }\n    handleCancel(rows) {\n        this.setState({ connecting: true });\n\n        SurveryHandler.CancelSurvey(this.props.drizzle, rows.address)\n            .then((canceled) => {\n                this.setState({ connecting: false, surveryCanceled: true });\n            })\n\n    }\n    sendFile(exportObj, exportName) {\n        var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\n        var downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n        document.body.appendChild(downloadAnchorNode); // required for firefox\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    }\n    handleClickDown = event => {\n        let survey = this.state.rows;\n        delete (survey['participants']);\n        delete (survey['_id']);\n        this.sendFile(this.state.rows, \"Signature\");\n    }\n    OwnerSurveysTable(classes, results) {\n        const Timestamp = require('react-timestamp');\n        const surveyLink = `/surveyX/#/participate/${this.state.rows.surveyCode}`;\n        return (\n            <div>\n                <Grid container spacing={40} className={classes.cardGrid}>\n                    <Grid item xs={12} md={12}>\n                        <Card className={classes.card}>\n                            <div className={classes.cardDetails}>\n                                <CardContent>\n                                    <Typography component=\"h1\" variant=\"h5\">\n                                        <Typography color=\"textSecondary\"> {'\\t'} Title</Typography>\n                                        {this.state.rows.title}\n                                    </Typography>\n                                    <Typography component=\"h1\" variant=\"h5\">\n                                        <Typography color=\"textSecondary\">{'\\t'}  Description</Typography>\n                                        {this.state.rows.description}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        disabled={this.state.rows.participants.length == 0}\n                                        className={classes.submit}\n                                        onClick={() => this.handleDone(this.state.rows)}\n                                    >\n                                        End Survey\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        className={classes.submit}\n                                        onClick={() => this.handleCancel(this.state.rows)}\n                                    >\n                                        Cancel Survey\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                        onClick={() => this.handleClickDown()}\n                                    >\n                                        <ArrowDownward className={classes.extendedIcon} />\n                                        Download\n                                    </Button>\n                                </CardActions>\n                            </div>\n                            <CardMedia\n                                className={classes.cardMedia}\n                                image={surveyIcon}\n                            />\n\n                        </Card>\n                        <br></br>\n                        <LinearProgress hidden={!this.state.connecting}></LinearProgress>\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Paper>\n                            <List dense={false}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={this.state.rows.option1}\n                                        secondary=\"First Option\"\n                                    />\n                                    <div>{this.state.rows ? this.RenderResult(this.state.rows.participants, 1, classes) : \"fool\"}</div>\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={this.state.rows.option2}\n                                        secondary=\"Second Option\"\n                                    />\n                                    <div>{this.state.rows ? this.RenderResult(this.state.rows.participants, 2, classes) : \"fool\"}</div>\n                                </ListItem>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={this.state.rows.option3}\n                                        secondary=\"Third Option\"\n                                    />\n                                    <div>{this.state.rows ? this.RenderResult(this.state.rows.participants, 3, classes) : \"fool\"}</div>\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Paper className={classes.root} >\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"left\">\n                                    <Grid container>\n                                        <Grid item> #ID:\n                                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                                {this.state.rows.surveyCode}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item> <BottomNavigationAction label=\"Share\" onClick={this.handleClickOpen} icon={<ShareIcon />} /></Grid>\n                                    </Grid>\n                                    <Dialog\n                                        open={this.state.open}\n                                        onClose={this.handleClose}\n                                        aria-labelledby=\"share-title\"\n                                        aria-describedby=\"share-description\"\n                                    >\n                                        <DialogTitle id=\"share-title\">{\"Share Code to participants: \"}</DialogTitle>\n                                        <DialogContent>\n                                            <Grid container spacing={8}>\n                                                <Grid item>  Please Share This Link:\n                                                    <Typography>\n                                                        <Link href={surveyLink}>{this.state.rows.surveyCode}</Link>\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item>\n                                                    <CopyToClipboard text={surveyLink}\n                                                        onCopy={() => this.setState({ copied: true })}>\n                                                        <Fab color=\"secondary\" aria-label=\"Edit\" className={classes.fab}>\n                                                            <FileCopyIcon />\n                                                        </Fab>\n                                                    </CopyToClipboard>\n\n                                                </Grid>\n                                            </Grid>\n                                        </DialogContent>\n                                        <DialogActions>\n                                        </DialogActions>\n                                    </Dialog>\n                                </TableCell>\n                                <TableCell align=\"left\">Creation Date:\n                                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                        <Timestamp date={this.state.rows.creationDate} />\n                                    </Typography></TableCell>\n                                <TableCell align=\"left\">Participants:\n                                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                        {this.state.rows.participants.length}\n                                    </Typography></TableCell>\n                            </TableRow>\n                        </TableHead>\n                    </Table>\n                </Paper></div>\n        );\n    }\n    WinnerCard(classes) {\n        return (\n            <Card className={classes.card}>\n                <CardActionArea>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Survey Concluded!\n                </Typography>\n                        <Typography component=\"p\">\n                            Winner Address is : <b>{this.state.winner}</b>\n                        </Typography>\n                        <Typography component=\"p\" color=\"textSecondary\">\n                            Please Send the Ether to this Account and have a nice day\n                </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <CopyToClipboard text={this.state.winner}>\n                        <Button size=\"small\" color=\"primary\">\n                            Copy\n                  </Button>\n                    </CopyToClipboard>\n                </CardActions>\n            </Card>\n        );\n    }\n\n}\n\n\nOwnerSurveys.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OwnerSurveys);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/SupervisorAccount';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Filter1 from '@material-ui/icons/Filter1Outlined';\nimport Filter2 from '@material-ui/icons/Filter2Outlined';\nimport Filter3 from '@material-ui/icons/Filter3Outlined';\nimport Bookmark from '@material-ui/icons/BookmarkBorder';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Card from '@material-ui/core/Card';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Done';\nimport helpers from '../_helpers/helpers'\nimport SurveryHandler from '../_contractHandlers/SurveryHandler';\nimport { Redirect } from 'react-router'\nimport Countdown from 'react-countdown-now';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { ParticipateLayoutStyles } from '../_layout/Styles';\n\nclass ParticipateLayout extends React.Component {\n  state = {\n    selected: 0,\n    title: '',\n    description: '',\n    option1: '',\n    option2: '',\n    option3: '',\n    surveyDate: '',\n    survey: null,\n    loading: true, drizzleState: null,\n    hasSurvey: false,\n    voted: false,\n    voting: false,\n    requestCall: true,\n    timeToRedirect: 1150000,\n    code: '',\n    surveyId: '',\n    participation: null\n  }\n  componentDidMount() {\n    const { drizzle, code } = this.props;\n    if (code) {\n      helpers.initDrizzle(drizzle).then((state) => {\n        this.setState(state);\n        this.setState({ requestCall: false })\n        const { drizzleState, selected } = this.state;\n        SurveryHandler.GetSurveyByCode(drizzle, code).then((res) => {\n          if (Object.entries(res).length > 0) {\n            SurveryHandler.GetParticipantByAddress(drizzleState.accounts[0], res).then((part) => {\n              if (Object.entries(part).length > 0) {\n                this.setState({ hasSurvey: true, voted: true, voting: false, participation: part });\n                this.forceUpdate();\n              }\n              else {\n                this.setState({\n                  hasSurvey: true,\n                  title: res.title,\n                  description: res.description,\n                  option1: res.option1,\n                  option2: res.option2,\n                  option3: res.option3,\n                  surveyId: res[\"_id\"]\n                });\n                this.forceUpdate();\n              }\n            });\n          }\n          else {\n            this.setState({ hasSurvey: false });\n            this.forceUpdate();\n          }\n\n        })\n      });\n    }\n  }\n\n  headerRender(classes) {\n    return (\n      <Card className={classes.footer} >\n        <CardHeader\n          avatar={<Bookmark />}\n          title=\"Participating in survey With Code: \"></CardHeader>\n        <CardActions disableActionSpacing>\n          <Typography component=\"h1\" className={classes.actions} color=\"textSecondary\" >\n            {this.props.code}\n          </Typography>\n        </CardActions>\n      </Card>);\n  }\n  handleClick(e) {\n    this.setState({ selected: e })\n  }\n  handleVote() {\n    const { drizzle } = this.props;\n    const { drizzleState, selected } = this.state;\n    this.setState({ voting: true })\n    SurveryHandler.CastVote(drizzle, drizzleState.accounts[0], this.state.surveyId, selected).then((res) => {\n      if (res) {\n        this.setState({ voted: true, voting: false, participation: res });\n        this.forceUpdate();\n      }\n    })\n  }\n  navigateHome(classes) {\n    const renderer = ({ hours, minutes, seconds, completed }) => {\n      if (completed) {\n        return <Redirect to=\"/\" />\n      } else {\n        return (\n          <Card className={classes.cardError}>\n            <CardHeader\n              avatar={\n                <div style={{ width: '50px' }}>\n                  <CircularProgressbar\n                    percentage={seconds * 20}\n                    text={`${seconds}s`}\n                    styles={{\n                      path: { stroke: `rgb(63, 81, 181, ${seconds * 20 / 100})` },\n                      text: { fill: '#f88', fontSize: '30px' },\n                    }}\n                  />\n                </div>\n              }\n              action={\n                <Fab variant=\"extended\" aria-label=\"Delete\" className={classes.fab}\n                  onClick={this.handleClickDown}\n                >\n                  <ArrowDownward className={classes.extendedIcon} />\n                  Download\n              </Fab>\n              }\n              title=\"Done! thanks for participating , wait for winner results soon\"></CardHeader>\n            <CardActions className={classes.actions} disableActionSpacing>\n              <Divider ></Divider>\n              <br></br>\n              <Typography component=\"i\" color=\"textSecondary\" >\n                Please Download your signature for safe keeping\n                </Typography>\n            </CardActions>\n          </Card>\n        )\n      }\n    };\n    return (\n      <Countdown date={Date.now() + this.state.timeToRedirect} renderer={renderer} />\n    );\n  }\n  sendFile(exportObj, exportName) {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\n    var downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n  handleClickDown = event => {\n    let part = this.state.participation;\n    delete (part['surveyId'])\n    delete (part['_id'])\n    const { code } = this.props;\n    part['surveyCode'] = code;\n    this.sendFile(this.state.participation, \"Signature\");\n  }\n  renderCodeRequest(classes) {\n    return (<main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.footer}>\n          <Bookmark />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter Survey Code\n        </Typography>\n        <TextField\n          id=\"survey-title\"\n          label=\"Survey Code\"\n          className={classes.textField}\n          helperText=\"Enter a Code for the survey!\"\n          margin=\"normal\"\n          fullWidth\n          onChange={this.handleChange}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => this.handleSendCode()}\n        >\n          Participate\n          </Button>\n      </Paper>\n    </main>)\n  }\n  handleSendCode() {\n    //http://localhost:3000/surveyX/#/participate/yjdnl782\n    window.location.href = window.location.href + '/' + this.state.code;\n    window.location.reload(true);\n  }\n\n  handleChange = event => {\n    const control = event.target;\n    this.setState({ code: control.value });\n  }\n  render() {\n    const { classes, code } = this.props;\n\n    if (!code) return this.renderCodeRequest(classes);\n    else if (this.state.requestCall) return (<div>\n      <Typography component=\"h1\" variant=\"h5\">\n\n        Please Wait ....\n        <Typography color=\"textSecondary\"> {'\\t'} Connecting to network</Typography>\n      </Typography>\n      <br></br>\n      <LinearProgress color=\"secondary\"></LinearProgress>\n    </div>);\n    else if (!this.state.hasSurvey) return (<Typography component=\"h1\" variant=\"h5\">\n\n      Code Doesn't Exist !\n    <Typography color=\"textSecondary\"> {'\\t'} Check the code and try again</Typography>\n    </Typography>);\n    else if (this.state.voted) return this.navigateHome(classes);\n    return (<div>\n\n      <main className={classes.main}>\n\n        <CssBaseline />\n\n        <Paper className={classes.paper}>\n          <Avatar className={classes.headerIcon}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {this.state.title}\n          </Typography>\n          <Typography component=\"p\" color=\"textSecondary\" variant=\"h5\">\n            {this.state.description}\n          </Typography>\n          <List className={classes.root}>\n            <ListItem button onClick={() => this.handleClick(1)}\n              className={this.state.selected === 1 ? classes.active : null} >\n              <Avatar>\n                <Filter1 />\n              </Avatar>\n              <ListItemText primary={this.state.option1} secondary=\"Check to Select Option 1\" />\n            </ListItem>\n            <ListItem button onClick={() => this.handleClick(2)}\n              className={this.state.selected === 2 ? classes.active : null} >\n              <Avatar>\n                <Filter2 />\n              </Avatar>\n              <ListItemText primary={this.state.option2} secondary=\"Check to Select Option 2\" />\n            </ListItem>\n            <ListItem button onClick={() => this.handleClick(3)}\n              className={this.state.selected === 3 ? classes.active : null} >\n              <Avatar>\n                <Filter3 />\n              </Avatar>\n              <ListItemText primary={this.state.option3} secondary=\"Check to Select Option 3\" />\n            </ListItem>\n            <ListItem className={classes.fab}>\n              <Fab variant=\"extended\" aria-label=\"Delete\" onClick={() => this.handleVote()}>\n                <NavigationIcon className={classes.extendedIcon} />{'\\t'}\n                Cast Vote\n            </Fab>\n            </ListItem>\n          </List>\n\n        </Paper>\n        <LinearProgress hidden={!this.state.voting}></LinearProgress>\n      </main> {this.headerRender(classes)}</div>\n    );\n  }\n}\n\n\nParticipateLayout.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(ParticipateLayoutStyles)(ParticipateLayout);\n","\nconst drawerWidth = 240;\n\nconst DashboardStyles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  chartContainer: {\n    marginLeft: -22,\n  },\n  tableContainer: {\n    height: 320,\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n});\nconst ParticipateLayoutStyles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  footer: {\n    marginTop: theme.spacing.unit * 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  headerIcon: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  fab: {\n    marginTop: theme.spacing.unit * 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  actions: {\n    alignItems: 'center',\n    align: 'center',\n    fontSize: '20px'\n  },\n  active: {\n    backgroundColor: 'rgba(13, 189, 13, 0.45)',\n    border: 'solid 1px green'\n  }\n});\nconst ClaimLayoutStyles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  dropzone: {\n    height: '50px'\n  },\n  listItemError: {\n    display: 'inline',\n    color: 'red'\n  },\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  footer: {\n    marginTop: theme.spacing.unit * 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  headerIcon: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  fab: {\n    marginTop: theme.spacing.unit * 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  actions: {\n    alignItems: 'center',\n    align: 'center',\n    fontSize: '20px'\n  },\n  active: {\n    backgroundColor: 'rgba(13, 189, 13, 0.45)',\n    border: 'solid 1px green'\n  }\n});\nconst HomeStyles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2,\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n  },\n  heroButtons: {\n    marginTop: theme.spacing.unit * 4,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`,\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing.unit * 6,\n  },\n});\nexport {\n  DashboardStyles,\n  HomeStyles,\n  ParticipateLayoutStyles,\n  ClaimLayoutStyles\n}","import React from 'react';\nimport ParticipateLayout from '../_layout/Participate';\nclass ParticipateScreen extends React.Component {\n  componentDidMount() {\n\n  }\n\n  render() {\n    let params = window.location.href.substr(window.location.href.lastIndexOf('/') + 1);\n    if (params === 'participate')\n      params = '';\n    return <ParticipateLayout code={params} drizzle={this.props.drizzle} ></ParticipateLayout>\n  }\n}\n\n\nexport default ParticipateScreen;","import { ClaimLayoutStyles } from '../_layout/Styles';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport 'react-circular-progressbar/dist/styles.css';\nimport helpers from '../_helpers/helpers';\nimport dbhelpers from '../_helpers/dbhelpers';\nimport SurveyHandler from '../_contractHandlers/SurveryHandler';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nclass ClaimLayout extends React.Component {\n    state = {\n        files: [], fileUploaded: true,\n        loading: true, drizzleState: null,\n    };\n    componentDidMount() {\n        const { drizzle } = this.props;\n        helpers.initDrizzle(drizzle).then((state) => {\n            this.setState(state);\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        if (this.state.loading) return (\n            <div>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Please Wait ....\n              <Typography color=\"textSecondary\"> {'\\t'} Connecting to network</Typography>\n                </Typography>\n                <br></br>\n                <LinearProgress color=\"secondary\"></LinearProgress>\n            </div>);\n        return this.renderCodeRequest(classes);\n    }\n    handleChange(files) {\n        this.setState({\n            files: files\n        });\n    }\n    renderCodeRequest(classes) {\n        return (<main className={classes.main}>\n            <CssBaseline />\n            <Paper className={classes.paper}>\n                <Avatar className={classes.footer}>\n                    <ArrowUpward />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Upload Signature\n            </Typography>\n                <DropzoneArea\n                    onChange={this.handleChange.bind(this)}\n                    filesLimit={1}\n                    dropzoneText={''}\n                    showFileNamesInPreview={true}\n                    dropzoneClass={classes.dropzone}\n                />\n                <div hidden={this.state.fileUploaded}>\n                    <p className={classes.listItemError}>Please Upload a file</p>\n                </div>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={() => this.handleClaim()}\n                >\n                    Claim Prize !\n              </Button>\n            </Paper>\n        </main>)\n    }\n    handleClaim = event => {\n        const { drizzle } = this.props;\n        if (this.state.files.length > 0) {\n            this.setState({ fileUploaded: true });\n            helpers.getJSONFromFile(this.state.files).then((sign) => {\n                const { drizzleState, selected } = this.state;\n                SurveyHandler.GetSurveyByCode(drizzle, sign.surveyCode).then((survey) => {\n                    SurveyHandler.ClaimPrize(drizzle, drizzleState.accounts[0], sign, survey).then((done) => {\n                        console.log(done);\n                    })\n\n                })\n            })\n        }\n        else {\n            this.setState({ fileUploaded: false });\n        }\n    }\n}\nClaimLayout.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(ClaimLayoutStyles)(ClaimLayout);\n","import React from 'react';\nimport RenderClaim from '../_layout/Claim'\n\nclass ClaimScreen extends React.Component {\n  componentDidMount() {\n    console.log(process.env.PUBLIC_URL);\n\n  }\n\n  render() {\n    return (<RenderClaim drizzle={this.props.drizzle}></RenderClaim>);\n  }\n}\n\n\nexport default ClaimScreen;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    appBar: {\n        position: 'relative',\n    },\n    icon: {\n        marginRight: theme.spacing.unit * 2,\n    },\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    heroContent: {\n        maxWidth: 600,\n        margin: '0 auto',\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n            width: 1100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    cardGrid: {\n        padding: `${theme.spacing.unit * 8}px 0`,\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing.unit * 6,\n    },\n});\n\nfunction TestNetLayout(props) {\n    const { classes } = props;\n    const cards = props.networks;\n    const prefix = '/surveyX/#/';\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <main>\n                {/* Hero unit */}\n                <div className={classes.heroUnit}>\n                    <div className={classes.heroContent}>\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            Ethereum Network Check\n                        </Typography>\n                        <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\">\n                            You need to connect your wallet (<b>MetaMask</b>, <b>Mist</b>, <b>Parity</b> or any other) to one of the following networks in order to be able to use this DApp!\n                            </Typography>\n                        <Typography variant=\"h6\" align=\"center\" paragraph>\n                          Our DApp is currently deployed on the following networks:\n                        </Typography>\n                    </div>\n                </div>\n                <div className={classNames(classes.layout, classes.cardGrid)}>\n                    {/* End hero unit */}\n                    <Grid container spacing={40}>\n                        {cards.map(card => (\n                            <Grid item key={card.id} sm={6} md={4} lg={3}>\n                                <Card className={classes.card}>\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {card.title}\n                                        </Typography>\n                                        <Typography variant=\"subheading\" color=\"secondary\">\n                                            {card.subtitle}\n                                        </Typography>\n                                        <Typography>\n                                            {card.body}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </main>\n            {/* Footer */}\n            <footer className={classes.footer}>\n                <div className={classes.heroButtons}>\n                    <Grid container spacing={16} justify=\"center\">\n                        <Grid item>\n                            <Button variant=\"contained\" color=\"primary\" href={prefix}>\n                                Lets Start\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </div>\n            </footer>\n            {/* End footer */}\n        </React.Fragment>\n    );\n}\n\nTestNetLayout.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TestNetLayout);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { HomeStyles } from './Styles';\n\nfunction RenderHome(props) {\n  const { classes } = props;\n  const prefix = '/surveyX/#/';\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main>\n        <div className={classes.heroUnit}>\n          <div className={classes.heroContent}>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Welcome to SurveyX!\n            </Typography>\n            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n              Crowd opinion mining and rewarding DApp.\n              For each survey, a randomly selected participant will be rewarded!\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={16} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\" href={prefix + \"new\"}>\n                    Create my survey\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" href={prefix + \"mysurveys\"}>\n                    Check my Survey State\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </div>\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          The code is available at Github: <a href=\"https://github.com/apper-tech/surveyX\">SurveyX</a>\n        </Typography>\n      </footer>\n    </React.Fragment>\n  );\n}\n\nRenderHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(HomeStyles)(RenderHome);\n","import React from 'react';\nimport RenderHome from '../_layout/Home'\n\nclass HomeScreen extends React.Component {\n  componentDidMount() {\n    console.log(process.env.PUBLIC_URL);\n\n  }\n\n  render() {\n    return (<RenderHome></RenderHome>);\n  }\n}\n\n\nexport default HomeScreen;","import React from 'react';\nimport helpers from '../_helpers/helpers';\nimport TestNetLayout from '../_layout/TestNet';\nimport HomeScreen from '../components/Home';\n\nclass TestNetCheck extends React.Component {\n    state = {\n        loading: true, drizzleState: null, networks: null, currentNetwork: null\n    }\n    componentDidMount() {\n        const { drizzle } = this.props;\n        helpers.initDrizzle(drizzle).then((state) => {\n            this.setState(state);\n        }).then(() => {\n            this.checkWeb3(drizzle);\n        });\n        helpers.getDeployedNetworks().then((networks) => {\n            const dNet = [];\n            if (networks.some(v => v === 'main')) {\n                dNet.push({ id: 1, title: 'Ethereum', subtitle: 'Ethereum main network', body: ' NET Ethereum (ETH) Blockchain' });\n            }\n            if (networks.some(v => v === 'kovan')) {\n                dNet.push({ id: 42, title: 'Kovan', subtitle: 'Kovan Testnet', body: 'TESTNET Kovan (ETH) Blockchain' });\n            }\n            if (networks.some(v => v === 'ropsten')) {\n                dNet.push({ id: 3, title: 'Ropsten', subtitle: 'Ropsten Testnet', body: ' TESTNET Ropsten (ETH) Blockchain' });\n            }\n            if (networks.some(v => v === 'rinkeby')) {\n                dNet.push({ id: 4, title: 'Rinkeby', subtitle: 'Rinkeby Testnet', body: 'TESTNET Rinkeby (ETH) Blockchain' });\n            }\n            if (networks.some(v => v === 'ganache')) {\n                dNet.push({ id: 99, title: 'Ganache', subtitle: 'Ganache Local Testnet', body: 'TESTNET Ganache (ETH) Blockchain' });\n            }\n\n\n            this.setState({ networks: dNet });\n        })\n    }\n    async checkWeb3(drizzle) {\n        drizzle.web3.eth.net.getNetworkType().then(networkName => {\n            if (networkName === 'private')\n                this.setState({ currentNetwork: 'ganache' });\n            else this.setState({ currentNetwork: networkName });\n        });\n    }\n    render() {\n        if (!this.state.networks) return \"loading...\";\n        if (this.state.networks.some(v => v.title.toLowerCase() === this.state.currentNetwork))\n            return (<HomeScreen></HomeScreen>);\n        else\n            return (<TestNetLayout networks={this.state.networks} currentNetwork={this.state.currentNetwork}></TestNetLayout>);\n    }\n}\nexport default TestNetCheck;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\nimport PeopleIcon from '@material-ui/icons/People';\nimport MoneyIcon from '@material-ui/icons/AttachMoney';\nimport DoneAllIcon from '@material-ui/icons/DoneAll'\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\nconst prefix = '/surveyX/#/';\nexport const mainListItems = (\n  <div>\n    <ListSubheader inset>Start Here</ListSubheader>\n    <div>\n      <Button variant=\"text\" color=\"primary\" href={prefix + \"new\"}>\n        <ListItem button>\n          <ListItemIcon>\n            <PlusOneIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"New Survey\" />\n        </ListItem>\n      </Button>\n    </div>\n    <div>\n      <Button variant=\"text\" color=\"primary\" href={prefix + \"mysurveys\"}>\n        <ListItem button>\n          <ListItemIcon>\n            <DoneAllIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Check my Survey\" />\n        </ListItem>\n      </Button>\n    </div>\n    <div>\n      <Button variant=\"text\" color=\"primary\" href={prefix + \"participate\"}>\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Participation\" />\n        </ListItem>\n      </Button>\n    </div>\n    <div>\n      <Button variant=\"text\" color=\"primary\" href={prefix + \"claim\"}>\n        <ListItem button>\n          <ListItemIcon>\n            <MoneyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"claim prize\" />\n        </ListItem>\n      </Button>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems } from './listItems';\nimport { DashboardStyles } from './Styles'\nimport { Link } from 'react-router-dom';\nimport logo from '../logo.png';\n\nconst headerStyle = {\n  backgroundImage: `url(${logo})`,\n  backgroundColor: '#3f51b5'\n};\nconst drawerStyle = {\n  color: '#fff',\n}\n\nclass Dashboard extends React.Component {\n  state = {\n    open: false,\n  };\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n      \n        <AppBar\n          position=\"absolute\"\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n        >\n\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(\n                classes.menuButton,\n                this.state.open && classes.menuButtonHidden,\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Link to=\"/\" className=\"LogoLink\">\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                Survey Rewards\n            </Typography>\n            </Link>\n          </Toolbar>\n        </AppBar>\n        \n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n          }}\n          open={this.state.open}\n\n        >\n          <div className={classes.toolbarIcon} style={headerStyle}>\n            <IconButton onClick={this.handleDrawerClose} style={drawerStyle}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n        </Drawer>\n        \n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          {this.props.children}\n        </main>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(DashboardStyles)(Dashboard);\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport NewSurvey from './components/NewSurvey';\nimport OwnerSurveys from './components/OwnerSurveys';\nimport Participate from './components/Participate';\nimport Claim from './components/Claim';\nimport TestNetCheck from './components/TestNetCheck';\n\nimport Dashboard from './_layout/Dashboard';\nconst baseName = process.env.PUBLIC_URL + '/';\n\nvar createReactClass = require('create-react-class');\n\nvar Wrapper = createReactClass({\n    render: function () {\n        return (\n            <Dashboard>\n                {this.props.children}\n            </Dashboard>\n        );\n    }\n});\n\nexport default function Routes(drizzle) {\n    return (\n        <HashRouter basename={baseName}>\n            <Switch>\n                {/*   <Route exact path='/' render={() =>\n                    (<Dashboard>\n                        <HomeScreen />\n                    </Dashboard>)} /> */}\n                <Route exact path='/' render={() =>\n                    (<Wrapper>\n                        <TestNetCheck drizzle={drizzle}></TestNetCheck>\n                    </Wrapper>)}></Route>\n                <Route path='/new' render={() =>\n                    (<Wrapper>\n                        <NewSurvey drizzle={drizzle} />\n                    </Wrapper>)} />\n                <Route path='/mysurveys' render={() =>\n                    (<Wrapper>\n                        <OwnerSurveys drizzle={drizzle} />\n                    </Wrapper>)} />\n                <Route path='/participate' render={() =>\n                    (<Wrapper>\n                        <Participate drizzle={drizzle} />\n                    </Wrapper>)} />\n                <Route path='/claim' render={() =>\n                    (<Wrapper>\n                        <Claim drizzle={drizzle} />\n                    </Wrapper>)} />\n            </Switch>\n        </HashRouter>\n    );\n}","import ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-roboto';\nimport Routes from './Routing';\nimport { Drizzle, generateStore } from 'drizzle';\nimport Survey from './contracts/Survey.json';\n\nconst options = {\n    contracts: [Survey],\n    web3: {\n        fallback: {\n            type: \"ws\",\n            url: \"ws://127.0.0.1:9545\",\n        }\n    }\n};\n\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);\n\n\nReactDOM.render(Routes(drizzle), document.getElementById('root'));\n\n"],"sourceRoot":""}